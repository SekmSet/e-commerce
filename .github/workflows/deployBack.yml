name: Build and Deploy back to cloud run

#on:
#  release:
#    types: [created]

on: [pull_request]

defaults:
  run:
    working-directory: ecommerce

# Environment variables available to all jobs and steps in this workflow
env:
  GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
  GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  GOOGLE_ZONE: europe-west1
  IMAGE: ecommerce_back
  REGISTRY_HOSTNAME: eu.gcr.io
  SERVICE_NAME: ecommerce-back

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, Deploy And Migrate
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GOOGLE_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build
        run: |
            docker build -f docker/dockerfile -t "$REGISTRY_HOSTNAME"/"$GOOGLE_PROJECT"/"$IMAGE":"$GITHUB_SHA" .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push $REGISTRY_HOSTNAME/$GOOGLE_PROJECT/$IMAGE:$GITHUB_SHA

      # Update .env.prod
      - name: Add DATABASE_URL to .env.prod
        run: |
          echo "$DATABASE_URL" >> .env.prod

      # Deploy the Docker image to Cloudrun
      - name: Deploy service to Cloud Run
        uses: stefda/action-cloud-run@v1.0
        with:
          image: $REGISTRY_HOSTNAME/$GOOGLE_PROJECT/$IMAGE:$GITHUB_SHA
          service: $SERVICE_NAME
          project: $GOOGLE_PROJECT
          region: $GOOGLE_ZONE
          env: .env.prod
          service key: ${{ secrets.GOOGLE_KEY }}